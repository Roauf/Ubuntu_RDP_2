name: Ubuntu SSH

on: 
  workflow_dispatch:
    inputs:
      authcode:
        description:
        required:
      pincode:
        description:
        required:
      authtoken:
        description: 'NGROK AUTH TOKEN'
        required: true
      computername:
        description: 'MACHINE NAME'
        default: 'ubuntu'
        required: true
      username:
        description: 'USER NAME'
        default: 'user'
        required: true
      password:
        description: 'USER PASSWORD'
        default: 'root'
        required: true

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.0.2

    - name: Mask Code & Pin.
      run: |
        _Token=$(jq -r '.inputs.authtoken' $GITHUB_EVENT_PATH)
        _CName=$(jq -r '.inputs.computername' $GITHUB_EVENT_PATH)
        _Pass=$(jq -r '.inputs.password' $GITHUB_EVENT_PATH)
        echo ::add-mask::$_Token
        echo ::add-mask::$_CName
        echo ::add-mask::$_Pass
        echo NGROK_TOKEN="$_Token" >> $GITHUB_ENV
        echo ComputerName="$_CName" >> $GITHUB_ENV
        echo Password="$_Pass" >> $GITHUB_ENV

    - name: Installing Desktop Environment (wait for 10 min)
      run: sudo apt update && sudo apt install ubuntu-desktop

    - name: Installing Google Chrome Headless
      run: |
           wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
           sudo dpkg --install google-chrome-stable_current_amd64.deb
           sudo apt install --assume-yes --fix-broken

    - name: Installing Some Configurations
      run: |
           sudo apt install nautilus expect nano -y
           sudo apt install --assume-yes xscreensaver

    - name: Installing Chrome Remote Desktop
      run: |
           sudo apt-get update
           sudo apt-get install xbase-clients python3-psutil -y
           wget https://dl.google.com/linux/direct/chrome-remote-desktop_current_amd64.deb
           sudo dpkg --install chrome-remote-desktop_current_amd64.deb
           sudo apt install --assume-yes --fix-broken

    - name: Setup Environment
      run: |
           bash Setup.sh "${{ env.NGROK_TOKEN }}" "${{ env.ComputerName }}" "${{ github.event.inputs.username }}" "${{ env.Password }}"
    
    - name: IP for Connect to your SSH
      run: bash Ip.sh "${{ github.event.inputs.username }}"

    - name: Keep Alive
      run: ping 127.0.0.1 > null
